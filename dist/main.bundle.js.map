{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.less","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.less","./src/app/dashboard/dashboard.component.ts","./src/app/forgot/forgot.component.html","./src/app/forgot/forgot.component.less","./src/app/forgot/forgot.component.ts","./src/app/login/login.component.html","./src/app/login/login.component.less","./src/app/login/login.component.ts","./src/app/register/register.component.html","./src/app/register/register.component.less","./src/app/register/register.component.ts","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ForgotComponent } from \"./forgot/forgot.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { DashboardComponent } from './dashboard/dashboard.component';\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'forgot', component: ForgotComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'dashboard', component: DashboardComponent},\n  {path: '**', component: LoginComponent}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<header>\\n  <p routerLink=\\\"/login\\\"><i class=\\\"glyphicon glyphicon-calendar calendar\\\"></i> <span>AppointerX</span></p>\\n</header>\\n\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.less\n// module id = ./src/app/app.component.less\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserService } from './user.service';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ForgotComponent,\n    RegisterComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.less\n// module id = ./src/app/dashboard/dashboard.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.less']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"text-center\\\">\\n      <h1>Forgot Password?</h1>\\n      <h5>Reset your password from mail</h5>\\n  </div>\\n  <br>\\n  <form class=\\\"form-horizontal appointment\\\" action=\\\"/action_page.php\\\" >\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2 col-xs-1\\\" for=\\\"email\\\"><i class=\\\"glyphicon glyphicon-user user\\\"></i></label>\\n          <div class=\\\"col-xs-10\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Email*\\\" name=\\\"email\\\">\\n              <label>Email*</label>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <div>\\n              <button type=\\\"submit\\\" >SUBMIT</button>\\n          </div>\\n          <div class=\\\"ftr\\\">\\n                  <p class=\\\"text-left reg\\\"><a routerLink=\\\"/register\\\">REGISTER NOW!</a></p>\\n                  <p class=\\\"text-right reg\\\"><a routerLink=\\\"/login\\\">LOGIN</a></p>\\n              </div>\\n      </div>\\n      \\n  </form>\\n</div>  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forgot/forgot.component.html\n// module id = ./src/app/forgot/forgot.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forgot/forgot.component.less\n// module id = ./src/app/forgot/forgot.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.less']\n})\nexport class ForgotComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forgot/forgot.component.ts","module.exports = \"\\n\\n<div class=\\\"container\\\">\\n<div class=\\\"imgcontainer text-center\\\">\\n  <img src=\\\"login.jpg\\\" alt=\\\"Avatar\\\" class=\\\"avatar\\\">\\n  <h6>APPOINTMENT MANAGER</h6>\\n</div>\\n<br>\\n<form class=\\\"form-horizontal appointment\\\" action=\\\"/action_page.php\\\" >\\n  <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2 col-xs-1\\\" for=\\\"email\\\"><i class=\\\"glyphicon glyphicon-user user\\\"></i></label>\\n      <div class=\\\"col-xs-10\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"loginData.email\\\" placeholder=\\\"Email*\\\" name=\\\"email\\\">\\n          <label>Email*</label>\\n      </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2 col-xs-1\\\" for=\\\"password\\\"><i class=\\\"glyphicon glyphicon-lock user\\\"></i></label>\\n      <div class=\\\"col-xs-10 \\\">\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"loginData.password\\\" placeholder=\\\"Password*\\\" name=\\\"password\\\">\\n          <label>Password*</label>\\n      </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <div>\\n          <button (click)=\\\"onLoginUser()\\\">LOGIN</button>\\n      </div>\\n      <div class=\\\"ftr\\\">\\n              <p class=\\\"text-left reg\\\"><a routerLink=\\\"/register\\\">REGISTER NOW!</a></p>\\n              <p class=\\\"text-right reg\\\"><a routerLink=\\\"/forgot\\\">FORGOT PASSWORD ?</a></p>\\n          </div>\\n  </div>\\n  \\n</form>\\n</div>\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.less\n// module id = ./src/app/login/login.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit {\n  loginData = {};\n  constructor(private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLoginUser() {\n    this.userService.onLoginUser(this.loginData)\n    .subscribe(data => {\n     \n        if(data){\n          this.router.navigate(['/dashboard'])\n        }\n      \n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"imgcontainer text-center\\\">\\n      <h2>Join Now</h2>\\n  </div>\\n  <br>\\n  <form class=\\\"form-horizontal appointment\\\" >\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"firstname\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"FirstName\\\" [(ngModel)]=\\\"registerUserData.firstname\\\" placeholder=\\\"First Name\\\" name=\\\"firstname\\\">\\n              <label>First Name*</label>\\n          </div>\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"lastname\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"LastName\\\" [(ngModel)]=\\\"registerUserData.lastname\\\" placeholder=\\\"Last Name\\\" name=\\\"lastname\\\">\\n              <label>Last Name*</label>\\n              \\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"email\\\">\\n              <i class=\\\"glyphicon glyphicon-user reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"registerUserData.email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\">\\n              <label>Email*</label>\\n              \\n          </div>\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"password\\\">\\n              <i class=\\\"glyphicon glyphicon-lock reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"registerUserData.password\\\" placeholder=\\\"Password\\\" name=\\\"pwd\\\">\\n              <label>Password*</label>\\n              \\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"role\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-11\\\">\\n              <select class=\\\"form-control role\\\" id=\\\"sel1\\\" [(ngModel)]='registerUserData.role'  name=\\\"role\\\">\\n                  <option>Select your profile</option>  \\n                <option class='option' *ngFor='let option of doctorsType' [value]=\\\"option\\\">{{option}}</option>\\n              </select>\\n              <!-- <select class=\\\"form-control role\\\" id=\\\"sel1\\\" onchange=\\\"phy()\\\">\\n                  <option disabled hidden selected>Select your profile</option>\\n                  <option>Patient</option>\\n                  <option>Physician</option>\\n              </select> -->\\n              <label>Select Role*</label>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\"  *ngIf=\\\"registerUserData.role == 'Physician'\\\">\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"npi\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NPI\\\" [(ngModel)]='registerUserData.npi' placeholder=\\\"NPI\\\" name=\\\"npi\\\">\\n              <label>NPI*</label>\\n              \\n          </div>\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"location\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Location\\\" [(ngModel)]='registerUserData.location' placeholder=\\\"Location*\\\" name=\\\"location\\\">\\n              <label>Location</label>\\n              \\n          </div>\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"add1\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"add1\\\" [(ngModel)]='registerUserData.add1' placeholder=\\\"address1\\\" name=\\\"add1\\\">\\n              <label>address1</label>\\n              \\n          </div>\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"add2\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"add2\\\" [(ngModel)]='registerUserData.add2' placeholder=\\\"address2\\\" name=\\\"add2\\\">\\n              <label>address2</label>\\n          </div>\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"city\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"City\\\" [(ngModel)]='registerUserData.city' placeholder=\\\"City\\\" name=\\\"city\\\">\\n              <label>City</label>\\n          </div>\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"pincode\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Pincode\\\" [(ngModel)]='registerUserData.pincode' placeholder=\\\"Pincode*\\\" name=\\\"pincode\\\">\\n              <label>Pincode*</label>\\n          </div>\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"state\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Satet\\\" [(ngModel)]='registerUserData.state' placeholder=\\\"State\\\" name=\\\"state\\\">\\n              <label>State</label>\\n          </div>\\n          <label class=\\\"control-label col-sm-1 col-xs-1\\\" for=\\\"country\\\">\\n              <i class=\\\"glyphicon glyphicon-pencil reg1\\\"></i>\\n          </label>\\n          <div class=\\\"col-xs-5\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Country\\\" [(ngModel)]='registerUserData.country' placeholder=\\\"Country\\\" name=\\\"country\\\">\\n              <label>Country</label>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <div>\\n              <button (click)=\\\"registerUser()\\\">SIGN UP</button>\\n          </div>\\n          <div class=\\\"Opt-Login\\\">\\n              Already have account? <a routerLink=\\\"/login\\\" class=\\\"redirect-login\\\">LOGIN</a>\\n          </div>\\n      </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.html\n// module id = ./src/app/register/register.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.less\n// module id = ./src/app/register/register.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.less']\n})\nexport class RegisterComponent implements OnInit {\n  \n  doctorsType = ['Patient','Physician'];\n  registerUserData = {}\n  constructor(private userService: UserService,\n  private router: Router) { }\n\n  ngOnInit() {\n  }\n  registerUser() {\n    this.userService.onRegisterUser(this.registerUserData)\n      .subscribe(data =>{\n        console.log(\"adding form values\");\n        console.log(data);\n        if(data){\n          this.router.navigate(['/dashboard'])\n        }\n      });\n    // this._auth.registerUser(this.registerUserData)\n    // .subscribe(\n    //   res => {\n    //     localStorage.setItem('token', res.token)\n    //     this._router.navigate(['/special'])\n    //   },\n    //   err => console.log(err)\n    // )      \n  }\n  submit() {\n    \n      \n  \n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable()\nexport class UserService {\n  private _registerUrl = \"http://localhost:3000/api/register\";\n  private _loginUrl = \"http://localhost:3000/api/login\";\n\n  constructor(private http: HttpClient) { }\n    onRegisterUser(user) {\n      return this.http.post<any>(this._registerUrl, user);\n    }\n    onLoginUser(user){\n      return this.http.post<any>(this._loginUrl, user);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}